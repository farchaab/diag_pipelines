include:
    "typing.rules"

if "mykrobe_panel" not in config.keys():
    mykrobe_panel = ""
else:
    mykrobe_panel = config["mykrobe_panel"]

if "mykrobe_confidence" not in config.keys():
    mykrobe_confidence = "10"
else:
    mykrobe_confidence = config["mykrobe_confidence"]

upstream_downstream = 5000

#data_path = "/home/pipeline_user/data/" 

mykrobe_species = {}
mykrobe_species["Mycobacterium"]="tb"
mykrobe_species["Staphylococcus"]="staph"

reference_assembly_for_resistance = {}
reference_assembly_for_resistance["Mycobacterium_tuberculosis"] = "538048"
reference_assembly_for_resistance["Escherichia_coli"] = "79781"

include:
    "../rules/annotation/resistance/format_xlsx.rules"

include:
    "../rules/annotation/resistance/rgi.rules"

include:
    "../rules/annotation/resistance/customdb.rules"

include:
    "../rules/annotation/resistance/tb-profiler.rules"

if species in reference_assembly_for_resistance.keys():
    include:
        "../rules/annotation/resistance/custom_annotated_dbs.rules"
    include:
        "../rules/annotation/resistance/detect_insertions_or_deletions.rules"

if species.startswith("Staphylococcus") or species.startswith("Mycobacterium"):
    print("sta or myco")
    include:
        "../rules/annotation/resistance/mykrobe.rules"
    rule all_resistance_summaries:
        input:
            rgi = "report/resistance/rgi_summary.xlsx",
            mykrobe = "report/resistance/mykrobe_summary.xlsx",

else:
    rule all_resistance_summaries:
        input:
            rgi = "resistance/rgi_summary.xlsx",
