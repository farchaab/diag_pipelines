
rule combined2rst:
    singularity:
        singularity_envs["python_r"]   
    input:
        rgi_files=expand("samples/{sample}/resistance/combined_{sample}.tsv", sample=read_naming.keys()),
        mlst_file="report/typing/mlst/summary.tsv",
        mash_files=expand("samples/{sample}/contamination/mash/assembly/distances_formated.tsv", sample=read_naming.keys()),
    output:
        "report/resistance/combined_report.rst",
    log:
        logging_folder + "report/resistance/combined_report.log"
    script: "scripts/card_mlst_rst_report.py"


rule rgi2rst_per_sample:
    singularity:
        singularity_envs["python_r"]   
    input:
        rgi_files="samples/{sample}/resistance/combined_{sample}.tsv",
        mlst_file="report/typing/mlst/summary.tsv",
        mash_files="samples/{sample}/contamination/mash/assembly/distances_formated.tsv",
    output:
        "report/resistance/combined_report_{sample}.rst",
    log:
        logging_folder + "report/resistance/combined_report_{sample}.log"
    script: "scripts/card_mlst_rst_report.py"



rule rst2docx:
    singularity:
        singularity_envs["pandoc"]   
    input:
        "{path}.rst",
    output:
        "{path}.docx",
    params:
        reference_docx = config["reference_docx"]
    log:
        logging_folder + "{path}.log"
    shell: 
        """
        pandoc --reference-doc={params[0]} {input[0]} -o {output[0]} --wrap=preserve
        """


rule tsv2xlsx:
    singularity:
        singularity_envs["python_r"]   
    input:
        "{path}.tsv",
    output:
        "{path}.xlsx",
    script:"scripts/tsv2xlsx.py"


